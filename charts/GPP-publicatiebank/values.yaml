global:
  settings:
    # -- Global databasehost, overrides setting.database.host
    databaseHost: ""

tags:
  redis: true

replicaCount: 1

image:
  repository: "ghcr.io/gpp-woo/gpp-publicatiebank"
  pullPolicy: IfNotPresent
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: ""
  automountServiceAccountToken: true

podAnnotations: {}

podLabels: {}

podSecurityContext:
  fsGroup: 1000

securityContext:
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: false
  runAsNonRoot: true
  runAsUser: 1000

livenessProbe:
  initialDelaySeconds: 60
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 6
  successThreshold: 1

readinessProbe:
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 6
  successThreshold: 1

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  className: ""
  # -- ingress hosts
  hosts: []
  #  - host: gpp-publicatiebank.gemeente.nl
  #    paths:
  #      - path: /
  #        pathType: ImplementationSpecific
  tls: []
  #  - secretName: gpp-publicatiebank-tls
  #    hosts:
  #      - gpp-publicatiebank.gemeente.nl

# -- Specify extra ingresses, for example if you have multiple ingress classes
extraIngress: []
# e.g:
# extraIngress:
#  - name: gpp-publicatiebank-azuregateway
#    annotations:
#      appgw.ingress.kubernetes.io/ssl-redirect: "true"
#    className: azure-application-gateway
#    hosts:
#      - host: gpp-publicatiebank.gemeente.nl
#        paths:
#          - path: /
#            pathType: ImplementationSpecific
#            servicename: gpp-publicatiebank
#            portNumber: 8000
#    tls:
#      - secretName: gpp-publicatiebank-tls
#        hosts:
#          - "gpp-publicatiebank.gemeente.nl"

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 200m
  #   memory: 256Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

pdb:
  create: false
  minAvailable: 1
  maxUnavailable: ""

nodeSelector: {}

tolerations: []

affinity: {}

persistence:
  size: 1Gi
  storageClassName: ""
  existingClaim: null
  mediaMountSubpath: gpp-publicatiebank/media
  privateMediaMountSubpath: gpp-publicatiebank/private_media

# Existing Secret must be defined for AzureVaultSecret to work
existingSecret: null

# This will create an AzureVaultSecret object in k8s, only Multi Key Value Secret are supported by this chart
# ref: https://akv2k8s.io/tutorials/sync/4-multi-key-value-secret/ https://learn.microsoft.com/en-us/azure/key-vault/secrets/multiline-secrets
# Using this feature requires you to define existingSecret
azureVaultSecret:
  # The name of the Azure Key Vault, setting this will create the AzureVaultSecret
  vaultName: null
  # The name of the Multi Key Value Secret
  objectName: ""
  # Make sure this matches the content of the secret, can be either 'application/x-json' or 'application/x-yaml'
  contentType: ""
  # You must set .Values.existingSecret
  secretName: "{{ .Values.existingSecret }}"

# -- Array with extra environment variables to add
extraEnvVars: []
# e.g:
# extraEnvVars:
#   - name: FOO
#     value: "bar"

# -- Optionally specify extra list of additional volumes
extraVolumes: []
# e.g:
# extraVolumes:
#   - name: verify-certs
#     configMap:
#       name: verify-certs

# -- Optionally specify extra list of additional volumeMounts
extraVolumeMounts: []
# e.g:
# extraVolumeMounts:
#  - name: verify-certs
#    mountPath: /etc/ssl/certs/extra-certs/

settings:
  allowedHosts: ""
  djangoSettingsModule: woo_publications.conf.docker
  useXForwardedHost: false

  # -- Generate secret key at https://djecrety.ir/
  secretKey: ""

  # -- Choises Strict or Lax
  cookieSamesite: ""

  # -- sets the 'ENVIRONMENT' variable
  environment: ""
  elasticapm:
    url: ""
    token: ""
    serviceName: ""

  database:
    host: ""
    port: 5432
    username: ""
    password: ""
    name: ""
    sslmode: prefer

  email:
    host: localhost
    port: 25
    username: ""
    password: ""
    useTLS: false
    defaultFrom: ""

  sentry:
    dsn: ""

  documentMaxBodySize: 4G

  # Cache settings, when the redis subchart is enabled these settings will be ignored and caching will default to the redis subchart services.
  cache:
    # e.g.:
    # default: gpp-publicatiebank-redis-master-0:6379/0
    # axes: gpp-publicatiebank-redis-master-0:6379/0
    default: ""
    axes: ""

  isHttps: true

  debug: false

  uwsgi:
    master: ''
    threads: ''
    processes: ''
    maxRequests: ''
    harakiri: ''

  # -- Disable two factor authentication
  disable2fa: false

  # -- Display environment information in the header in the admin. Defaults to True. Environment information is only displayed to logged in users.
  showLabelEnvironment: false
  # -- Environment information to display, defaults to the value of ENVIRONMENT. Only displayed when SHOW_ENVIRONMENT is set to True. You can set this to strings like OpenGem PROD or simply PROD, depending on your needs.
  environmentLabelName: ""
  # --  CSS color value for the environment information background color. Defaults to orange, example values can be specified in HEX format too, e.g.: #FF0000 for red.
  environmentLabelBackgroundColor: ""
  # -- CSS color value for the environment information text color. Defaults to black. Follows the same rules as ENVIRONMENT_BACKGROUND_COLOR.
  environmentLabelForegroundColor: ""

  celery:
    brokerUrl: ""
    resultBackend: ""
    logLevel: debug

worker:
  label: "1"
  name: ""
  queueName: ""
  replicaCount: 1
  concurrency: 4
  podLabels: {}
  resources: {}
  livenessProbe: 
    enabled: false
    exec:
      command:
        - /bin/sh
        - -c
        - celery --workdir src --app woo_publications.celery inspect --destination celery@${HOSTNAME} active
    initialDelaySeconds: 60
    periodSeconds: 30
    timeoutSeconds: 10
    failureThreshold: 3
    successThreshold: 1
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80
    behavior: {}

flower:
  enabled: true
  urlPrefix: "/flower/"
  # -- Basic auth credentials in format `user:password`
  basicAuth: ""
  replicaCount: 1
  podLabels: {}
  service:
    type: ClusterIP
    port: 5555
    annotations: {}
  livenessProbe:
    initialDelaySeconds: 60
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  readinessProbe:
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  resources: {}

nginx:
  image:
    repository: nginxinc/nginx-unprivileged
    pullPolicy: IfNotPresent
    tag: stable
  existingConfigmap: null
  service:
    type: ClusterIP
    port: 80
    annotations: {}
  replicaCount: 1
  podLabels: {}
  securityContext:
    capabilities:
      drop:
      - ALL
    readOnlyRootFilesystem: false
    runAsNonRoot: true
    runAsUser: 101
  autoscaling:
    enabled: false
  livenessProbe: {}
  readinessProbe: {}
  resources: {}

##################
# Redis subchart #
##################

redis:
  architecture: standalone
  auth:
    enabled: false
  master:
    persistence:
      enabled: true
      size: 8Gi
      storageClass: ""
    resources:
      requests:
        cpu: 10m
        memory: 20Mi
